- name: remove old docker image
  docker_image:
    name: "{{ inventory_hostname }}"
    tag: "{{ build_vars.tag }}"
    state: absent
  become: "{{ docker_become_user is defined }}"
  become_user: "{{ docker_become_user|default(omit) }}"
  register: docker_build_result
  tags: [ never, rebuild ]

- name: perform docker build
  environment:
    DOCKER_BUILDKIT: "1"
  docker_image:
    name: "{{ inventory_hostname }}"
    tag: "{{ build_vars.tag }}"
    source: build
    push: no
    build:
      path: "{{ docker_build_directory.path }}"
      # explicitly fetch updates to the FROM image, so things like "latest" continue to be up to date
      pull: yes
  become: "{{ docker_become_user is defined }}"
  become_user: "{{ docker_become_user|default(omit) }}"
  register: docker_build_result

- name: check docker build created new image
  assert:
    fail_msg: new docker image not created. to force overwriting existing image specify --tags=all,rebuild
    that:
      - docker_build_result.changed
